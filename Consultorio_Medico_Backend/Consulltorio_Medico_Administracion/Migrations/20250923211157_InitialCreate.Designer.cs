// <auto-generated />
using Consultorio_Medico_Administracion.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Consultorio_Medico_Administracion.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250923211157_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Consultorio_Medico_Administracion.Models.Centro_Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Centros_Medicos");
                });

            modelBuilder.Entity("Consultorio_Medico_Administracion.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("centro_medicoID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("especialidadID")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("salario")
                        .HasColumnType("double");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("tipo_empleadoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("centro_medicoID");

                    b.HasIndex("especialidadID");

                    b.HasIndex("tipo_empleadoID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Consultorio_Medico_Administracion.Models.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("especialidad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Consultorio_Medico_Administracion.Models.Tipo_Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tipos_Empleados");
                });

            modelBuilder.Entity("Consultorio_Medico_Administracion.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("empleadoId")
                        .HasColumnType("int");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("empleadoId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Consultorio_Medico_Administracion.Models.Empleado", b =>
                {
                    b.HasOne("Consultorio_Medico_Administracion.Models.Centro_Medico", "Centro_Medico")
                        .WithMany()
                        .HasForeignKey("centro_medicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultorio_Medico_Administracion.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("especialidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultorio_Medico_Administracion.Models.Tipo_Empleado", "Tipo_Empleado")
                        .WithMany()
                        .HasForeignKey("tipo_empleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centro_Medico");

                    b.Navigation("Especialidad");

                    b.Navigation("Tipo_Empleado");
                });

            modelBuilder.Entity("Consultorio_Medico_Administracion.Models.Usuario", b =>
                {
                    b.HasOne("Consultorio_Medico_Administracion.Models.Empleado", "empleado")
                        .WithOne()
                        .HasForeignKey("Consultorio_Medico_Administracion.Models.Usuario", "empleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empleado");
                });
#pragma warning restore 612, 618
        }
    }
}
